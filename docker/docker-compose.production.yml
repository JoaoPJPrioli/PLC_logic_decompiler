version: '3.8'
services:
  api-gateway:
    image: plc-decompiler/api-gateway:latest
    container_name: api-gateway
    restart: unless-stopped
    networks:
    - plc_network
    environment:
      GATEWAY_PORT: '8080'
      ENABLE_CORS: 'true'
      RATE_LIMIT: '1000'
      LOG_LEVEL: INFO
    ports:
    - 8080:8080
    depends_on: []
  parser-service:
    image: plc-decompiler/parser-service:latest
    container_name: parser-service
    restart: unless-stopped
    networks:
    - plc_network
    environment:
      SERVICE_PORT: '8081'
      MAX_FILE_SIZE: 100MB
      PARSER_TIMEOUT: '300'
    ports: []
    depends_on: []
  analysis-service:
    image: plc-decompiler/analysis-service:latest
    container_name: analysis-service
    restart: unless-stopped
    networks:
    - plc_network
    environment:
      SERVICE_PORT: '8082'
      ANALYSIS_TIMEOUT: '600'
      MAX_GRAPH_NODES: '10000'
    ports: []
    depends_on: []
  ai-service:
    image: plc-decompiler/ai-service:latest
    container_name: ai-service
    restart: unless-stopped
    networks:
    - plc_network
    environment:
      SERVICE_PORT: '8083'
      AI_PROVIDER: gemini
      MODEL_CACHE_SIZE: '1000'
      GPU_ENABLED: 'false'
    ports: []
    depends_on: []
  visualization-service:
    image: plc-decompiler/visualization-service:latest
    container_name: visualization-service
    restart: unless-stopped
    networks:
    - plc_network
    environment:
      SERVICE_PORT: '8084'
      MAX_NODES_3D: '5000'
      RENDER_TIMEOUT: '120'
    ports: []
    depends_on: []
  web-frontend:
    image: plc-decompiler/web-frontend:latest
    container_name: web-frontend
    restart: unless-stopped
    networks:
    - plc_network
    environment:
      REACT_APP_API_URL: http://api-gateway:8080
      REACT_APP_ENV: production
    ports:
    - 3000:3000
    depends_on: []
  database:
    image: plc-decompiler/database:latest
    container_name: database
    restart: unless-stopped
    networks:
    - plc_network
    environment:
      POSTGRES_DB: plc_decompiler
      POSTGRES_USER: plc_user
      POSTGRES_PASSWORD: secure_password
    ports:
    - 5432:5432
    depends_on: []
    volumes:
    - postgres_data:/var/lib/postgresql/data
  redis:
    image: plc-decompiler/redis:latest
    container_name: redis
    restart: unless-stopped
    networks:
    - plc_network
    environment:
      REDIS_PASSWORD: cache_password
      REDIS_MAXMEMORY: 800mb
    ports: []
    depends_on: []
    volumes:
    - redis_data:/data
    command: redis-server --requirepass ${REDIS_PASSWORD}
volumes:
  postgres_data: {}
  redis_data: {}
  file_storage: {}
networks:
  plc_network:
    driver: bridge
